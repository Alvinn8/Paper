From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Tue, 1 Mar 2016 13:24:16 -0600
Subject: [PATCH] Allow nerfed mobs to jump and take water damage


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 02f4342b23ad4a3ad0ed09affe7ce5e572354668..4982fd2842342fe9a37123e34af0040ec580cf2d 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -93,4 +93,9 @@ public class PaperWorldConfig {
         fishingMaxTicks = getInt("fishing-time-range.MaximumTicks", 600);
         log("Fishing time ranges are between " + fishingMinTicks +" and " + fishingMaxTicks + " ticks");
     }
+
+    public boolean nerfedMobsShouldJump;
+    private void nerfedMobsShouldJump() {
+        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", false);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 9cd0aff6ade8b6b51866cc63190b805dab642390..7bb6b2077876b837f3b7190b9ee059bd92658c11 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1107,6 +1107,7 @@ public abstract class Entity implements Nameable, CommandSource, KeyedObject { /
         return this.isInWater() || this.isInRain();
     }
 
+    public final boolean isInWaterOrRainOrBubble() { return isInWaterRainOrBubble(); } // Paper - OBFHELPER
     public boolean isInWaterRainOrBubble() {
         return this.isInWater() || this.isInRain() || this.isInBubbleColumn();
     }
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 71529f141b2c71faf2ba29a129e025a6373c53e2..64118a0239e0e382ad40b267433de9b2f31c078b 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -38,6 +38,7 @@ import net.minecraft.world.entity.ai.control.BodyRotationControl;
 import net.minecraft.world.entity.ai.control.JumpControl;
 import net.minecraft.world.entity.ai.control.LookControl;
 import net.minecraft.world.entity.ai.control.MoveControl;
+import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.GoalSelector;
 import net.minecraft.world.entity.ai.navigation.GroundPathNavigation;
@@ -46,6 +47,8 @@ import net.minecraft.world.entity.ai.sensing.Sensing;
 import net.minecraft.world.entity.decoration.HangingEntity;
 import net.minecraft.world.entity.decoration.LeashFenceKnotEntity;
 import net.minecraft.world.entity.item.ItemEntity;
+import net.minecraft.world.entity.monster.Blaze;
+import net.minecraft.world.entity.monster.EnderMan;
 import net.minecraft.world.entity.monster.Enemy;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.vehicle.Boat;
@@ -97,6 +100,7 @@ public abstract class Mob extends LivingEntity {
     private final BodyRotationControl bodyRotationControl;
     protected PathNavigation navigation;
     public GoalSelector goalSelector;
+    @Nullable public FloatGoal goalFloat; // Paper
     public GoalSelector targetSelector;
     private LivingEntity target;
     private final Sensing sensing;
@@ -783,7 +787,17 @@ public abstract class Mob extends LivingEntity {
     @Override
     protected final void serverAiStep() {
         ++this.noActionTime;
-        if (!this.aware) return; // CraftBukkit
+        if (!this.aware) { // Paper start - Allow nerfed mobs to jump, float and take water damage
+            if (goalFloat != null) {
+                if (goalFloat.validConditions()) goalFloat.update();
+                this.getJumpControl().jumpIfSet();
+            }
+            if ((this instanceof Blaze || this instanceof EnderMan) && isInWaterOrRainOrBubble()) {
+                hurt(DamageSource.DROWN, 1.0F);
+            }
+            return;
+        }
+        // Paper end
         this.level.getProfiler().push("sensing");
         this.sensing.tick();
         this.level.getProfiler().pop();
diff --git a/src/main/java/net/minecraft/world/entity/ai/control/JumpControl.java b/src/main/java/net/minecraft/world/entity/ai/control/JumpControl.java
index 5f7ad2b57d8d8f0f6a7d880f55e08b52f017cf51..09d1cda50ce9076e9236d124aa7766a26a50dae1 100644
--- a/src/main/java/net/minecraft/world/entity/ai/control/JumpControl.java
+++ b/src/main/java/net/minecraft/world/entity/ai/control/JumpControl.java
@@ -15,6 +15,7 @@ public class JumpControl {
         this.jump = true;
     }
 
+    public final void jumpIfSet() { this.tick(); } // Paper - OBFHELPER
     public void tick() {
         this.mob.setJumping(this.jump);
         this.jump = false;
diff --git a/src/main/java/net/minecraft/world/entity/ai/goal/FloatGoal.java b/src/main/java/net/minecraft/world/entity/ai/goal/FloatGoal.java
index 7ea5cb5a92ff3b66859ebcd53031aa06689bd329..790b5646683247ef757095a0763dc52701afe97b 100644
--- a/src/main/java/net/minecraft/world/entity/ai/goal/FloatGoal.java
+++ b/src/main/java/net/minecraft/world/entity/ai/goal/FloatGoal.java
@@ -11,15 +11,18 @@ public class FloatGoal extends Goal {
 
     public FloatGoal(Mob mob) {
         this.mob = mob;
+        if (mob.getCommandSenderWorld().paperConfig.nerfedMobsShouldJump) mob.goalFloat = this; // Paper
         this.setFlags(EnumSet.of(Goal.Flag.JUMP));
         mob.getNavigation().setCanFloat(true);
     }
 
+    public final boolean validConditions() { return this.canUse(); } // Paper - OBFHELPER
     @Override
     public boolean canUse() {
         return this.mob.isInWater() && this.mob.getFluidHeight((Tag) FluidTags.WATER) > this.mob.getFluidJumpThreshold() || this.mob.isInLava();
     }
 
+    public void update() { this.tick(); } // Paper - OBFHELPER
     @Override
     public void tick() {
         if (this.mob.getRandom().nextFloat() < 0.8F) {
