From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 2 Apr 2020 01:42:39 -0400
Subject: [PATCH] Prevent Double PlayerChunkMap adds crashing server

Suspected case would be around the technique used in .stopRiding
Stack will identify any causer of this and warn instead of crashing.

diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index c3726bce62368d434bc505fa5c3f5f09b0af315f..a70907a7bbafc3c2f9edc80069e95f444129d8c8 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -1493,6 +1493,14 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
 
     protected void addEntity(Entity entity) {
         org.spigotmc.AsyncCatcher.catchOp("entity track"); // Spigot
+        // Paper start - ignore and warn about illegal addEntity calls instead of crashing server
+        if (!entity.valid || entity.level != this.level || this.entityMap.containsKey(entity.getId())) {
+            new Throwable("[ERROR] Illegal PlayerChunkMap::addEntity for world " + this.level.getWorld().getName()
+                + ": " + entity  + (this.entityMap.containsKey(entity.getId()) ? " ALREADY CONTAINED (This would have crashed your server)" : ""))
+                .printStackTrace();
+            return;
+        }
+        // Paper end
         if (!(entity instanceof EnderDragonPart)) {
             EntityType<?> entitytypes = entity.getType();
             int i = entitytypes.clientTrackingRange() * 16;
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index e5a86848560ea4d53efc68fc59183117ee348c51..aad3d08c2235442e83475f295d2f6f5380f0fd24 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1523,7 +1523,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
                 }
             }
 
-            this.getChunkSource().addEntity(entity);
+            // this.getChunkProvider().addEntity(entity); // Paper - moved down below valid=true
             // CraftBukkit start - SPIGOT-5278
             if (entity instanceof Drowned) {
                 this.navigations.add(((Drowned) entity).waterNavigation);
@@ -1534,6 +1534,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
                 this.navigations.add(((Mob) entity).getNavigation());
             }
             entity.valid = true; // CraftBukkit
+            this.getChunkSource().addEntity(entity); // Paper - from above to be below valid=true
             // Paper start - Set origin location when the entity is being added to the world
             if (entity.origin == null) {
                 entity.origin = entity.getBukkitEntity().getLocation();
