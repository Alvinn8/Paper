From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 21 Jul 2018 08:25:40 -0400
Subject: [PATCH] Add Debug Entities option to debug dupe uuid issues

Add -Ddebug.entities=true to your JVM flags to gain more information

diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 125c93e7aa0ef73c47d62671a2effcbce67030c9..1bb4d3c1b7544c165701e19aea56b925b7ae0785 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -1137,6 +1137,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
             } else {
                 ChunkMap.TrackedEntity playerchunkmap_entitytracker = new ChunkMap.TrackedEntity(entity, i, j, entitytypes.trackDeltas());
 
+                entity.tracker = playerchunkmap_entitytracker; // Paper - Fast access to tracker
                 this.entityMap.put(entity.getId(), playerchunkmap_entitytracker);
                 playerchunkmap_entitytracker.updatePlayers(this.level.players());
                 if (entity instanceof ServerPlayer) {
@@ -1178,7 +1179,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
         if (playerchunkmap_entitytracker1 != null) {
             playerchunkmap_entitytracker1.broadcastRemoved();
         }
-
+        entity.tracker = null; // Paper - We're no longer tracked
     }
 
     protected void tick() {
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 0f4939f909e7de4225488e705b1319e1b84d9bf3..aa84d847435d9fdb2dfcf5e6950cf3169a18b9bd 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1033,8 +1033,28 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
     // CraftBukkit start
     private boolean addEntity0(Entity entity, CreatureSpawnEvent.SpawnReason spawnReason) {
         org.spigotmc.AsyncCatcher.catchOp("entity add"); // Spigot
-        if (entity.valid) { MinecraftServer.LOGGER.error("Attempted Double World add on " + entity, new Throwable()); return true; } // Paper
+        // Paper start
+        if (entity.valid) {
+            MinecraftServer.LOGGER.error("Attempted Double World add on " + entity, new Throwable());
+
+            if (DEBUG_ENTITIES) {
+                Throwable thr = entity.addedToWorldStack;
+                if (thr == null) {
+                    MinecraftServer.LOGGER.error("Double add entity has no add stacktrace");
+                } else {
+                    MinecraftServer.LOGGER.error("Double add stacktrace: ", thr);
+                }
+            }
+            return true;
+        }
+        // Paper end
         if (entity.removed) {
+            // Paper start
+            if (DEBUG_ENTITIES) {
+                new Throwable("Tried to add entity " + entity + " but it was marked as removed already").printStackTrace(); // CraftBukkit
+                getAddToWorldStackTrace(entity).printStackTrace();
+            }
+            // Paper end
             // WorldServer.LOGGER.warn("Tried to add entity {} but it was marked as removed already", EntityTypes.getName(entity.getEntityType())); // CraftBukkit
             return false;
         } else if (this.isUUIDUsed(entity)) {
@@ -1232,7 +1252,24 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
                 }
             }
 
-            this.entitiesByUuid.put(entity.getUUID(), entity);
+            if (DEBUG_ENTITIES) {
+                entity.addedToWorldStack = getAddToWorldStackTrace(entity);
+            }
+
+            Entity old = this.entitiesByUuid.put(entity.getUUID(), entity);
+            if (old != null && old.getId() != entity.getId() && old.valid) {
+                Logger logger = LogManager.getLogger();
+                logger.error("Overwrote an existing entity " + old + " with " + entity);
+                if (DEBUG_ENTITIES) {
+                    if (old.addedToWorldStack != null) {
+                        old.addedToWorldStack.printStackTrace();
+                    } else {
+                        logger.error("Oddly, the old entity was not added to the world in the normal way. Plugins?");
+                    }
+                    entity.addedToWorldStack.printStackTrace();
+                }
+            }
+
             this.getChunkSource().addEntity(entity);
             // CraftBukkit start - SPIGOT-5278
             if (entity instanceof Drowned) {
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 4b65f0f673d76189a9d887230f5b1376462664d4..9cc3a773beabb90887551e5a8c4a9a8c850fb562 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -48,6 +48,7 @@ import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.KeyedObject;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ChunkMap;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.level.TicketType;
@@ -164,6 +165,9 @@ public abstract class Entity implements Nameable, CommandSource, KeyedObject { /
     public com.destroystokyo.paper.loottable.PaperLootableInventoryData lootableData; // Paper
     private CraftEntity bukkitEntity;
 
+    public ChunkMap.TrackedEntity tracker; // Paper
+    boolean collisionLoadChunks = false; // Paper
+    public Throwable addedToWorldStack; // Paper - entity debug
     public CraftEntity getBukkitEntity() {
         if (bukkitEntity == null) {
             bukkitEntity = CraftEntity.getEntity(level.getCraftServer(), this);
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index d150df18ad3e6b5a245f015ef66fc0c10693bd16..690c4f70f26d9ba895177579eda20e03dad8df85 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -122,6 +122,7 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
     public boolean pvpMode;
     public boolean keepSpawnInMemory = true;
     public org.bukkit.generator.ChunkGenerator generator;
+    public static final boolean DEBUG_ENTITIES = Boolean.getBoolean("debug.entities"); // Paper
 
     public boolean captureBlockStates = false;
     public boolean captureTreeGeneration = false;
