From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 31 Mar 2016 19:17:58 -0400
Subject: [PATCH] Do not load chunks for Pathfinding


diff --git a/src/main/java/net/minecraft/world/entity/ai/navigation/PathNavigation.java b/src/main/java/net/minecraft/world/entity/ai/navigation/PathNavigation.java
index ee31638cfcc39d622e9f90e36ca684db377697c6..85c6b506480d1b11c15e7047e45d610611c443b1 100644
--- a/src/main/java/net/minecraft/world/entity/ai/navigation/PathNavigation.java
+++ b/src/main/java/net/minecraft/world/entity/ai/navigation/PathNavigation.java
@@ -45,7 +45,7 @@ public abstract class PathNavigation {
     private BlockPos targetPos;
     private int reachRange;
     private float maxVisitedNodesMultiplier = 1.0F;
-    private final PathFinder pathFinder;
+    private final PathFinder pathFinder; public PathFinder getPathfinder() { return this.pathFinder; } // Paper - OBFHELPER
     private boolean isStuck;
 
     public PathNavigation(Mob mob, Level world) {
diff --git a/src/main/java/net/minecraft/world/level/pathfinder/PathFinder.java b/src/main/java/net/minecraft/world/level/pathfinder/PathFinder.java
index 02767e75e41f30b89173db4efb20b9ea1b2eccd3..28050c733ec517fb667678d0d85f77d23dc33c76 100644
--- a/src/main/java/net/minecraft/world/level/pathfinder/PathFinder.java
+++ b/src/main/java/net/minecraft/world/level/pathfinder/PathFinder.java
@@ -18,7 +18,7 @@ import net.minecraft.world.level.PathNavigationRegion;
 public class PathFinder {
     private final Node[] neighbors = new Node[32];
     private final int maxVisitedNodes;
-    private final NodeEvaluator nodeEvaluator;
+    private final NodeEvaluator nodeEvaluator; public NodeEvaluator getPathfinder() { return this.nodeEvaluator; }  // Paper - OBFHELPER
     private final BinaryHeap openSet = new BinaryHeap();
 
     public PathFinder(NodeEvaluator pathNodeMaker, int range) {
diff --git a/src/main/java/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java b/src/main/java/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java
index 30b6ccd59a38269c7fb590a1c72e09757a5abf9e..39108cd576eadbc8faed3c3831625d1f53df96aa 100644
--- a/src/main/java/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java
+++ b/src/main/java/net/minecraft/world/level/pathfinder/WalkNodeEvaluator.java
@@ -445,6 +445,12 @@ public class WalkNodeEvaluator extends NodeEvaluator {
                     if (l != 0 || n != 0) {
                         mutableBlockPos.set(i + l, j + m, k + n);
                         BlockState blockState = blockGetter.getBlockState(mutableBlockPos);
+                        // Paper start
+                        BlockState iblockdata = blockGetter.getTypeIfLoaded(mutableBlockPos);
+                        if (iblockdata == null) {
+                            return BlockPathTypes.BLOCKED;
+                        }
+                        // Paper end
                         if (blockState.is(Blocks.CACTUS)) {
                             return BlockPathTypes.DANGER_CACTUS;
                         }
@@ -469,7 +475,8 @@ public class WalkNodeEvaluator extends NodeEvaluator {
     }
 
     protected static BlockPathTypes getBlockPathTypeRaw(BlockGetter blockGetter, BlockPos blockPos) {
-        BlockState blockState = blockGetter.getBlockState(blockPos);
+        BlockState blockState = blockGetter.getTypeIfLoaded(blockPos); // Paper
+        if (blockState == null) return BlockPathTypes.BLOCKED; // Paper
         Block block = blockState.getBlock();
         Material material = blockState.getMaterial();
         if (blockState.isAir()) {
