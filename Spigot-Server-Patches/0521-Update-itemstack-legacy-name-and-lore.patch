From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Wed, 1 Jul 2020 11:57:40 -0500
Subject: [PATCH] Update itemstack legacy name and lore


diff --git a/src/main/java/net/minecraft/nbt/StringTag.java b/src/main/java/net/minecraft/nbt/StringTag.java
index e13a615b410c3d702144b94b9ab921010cba4be6..f528b651a47f33ebf60a0affb942d03586d4fe44 100644
--- a/src/main/java/net/minecraft/nbt/StringTag.java
+++ b/src/main/java/net/minecraft/nbt/StringTag.java
@@ -36,6 +36,7 @@ public class StringTag implements Tag {
         this.data = value;
     }
 
+    public static StringTag create(String s) { return valueOf(s); } // Paper - OBFHELPER
     public static StringTag valueOf(String value) {
         return value.isEmpty() ? EMPTY : new StringTag(value);
     }
diff --git a/src/main/java/net/minecraft/world/item/ItemStack.java b/src/main/java/net/minecraft/world/item/ItemStack.java
index ff93492244e3616827aafc8c1fc2f4468065c592..b40420a5841e0a52cfdc15900683bd63dce540fc 100644
--- a/src/main/java/net/minecraft/world/item/ItemStack.java
+++ b/src/main/java/net/minecraft/world/item/ItemStack.java
@@ -28,6 +28,7 @@ import net.minecraft.core.Registry;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.NbtOps;
+import net.minecraft.nbt.StringTag;
 import net.minecraft.nbt.Tag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.ComponentUtils;
@@ -136,6 +137,44 @@ public final class ItemStack {
             list.sort((Comparator<? super Tag>) enchantSorter); // Paper
         } catch (Exception ignored) {}
     }
+
+    private void processText() {
+        CompoundTag display = getSubTag("display");
+        if (display != null) {
+            if (display.contains("Name", 8)) {
+                String json = display.getString("Name");
+                if (json != null && json.contains("\u00A7")) {
+                    try {
+                        display.put("Name", convert(json));
+                    } catch (JsonParseException jsonparseexception) {
+                        display.remove("Name");
+                    }
+                }
+            }
+            if (display.contains("Lore", 9)) {
+                ListTag list = display.getList("Lore", 8);
+                for (int index = 0; index < list.size(); index++) {
+                    String json = list.getString(index);
+                    if (json != null && json.contains("\u00A7")) { // Only try if it has legacy in the unparsed json
+                        try {
+                            list.set(index, convert(json));
+                        } catch (JsonParseException e) {
+                            list.set(index, StringTag.create(org.bukkit.craftbukkit.util.CraftChatMessage.toJSON(new TextComponent(""))));
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    private StringTag convert(String json) {
+        Component component = Component.Serializer.jsonToComponent(json);
+        if (component instanceof TextComponent && component.getContents().contains("\u00A7") && component.getSiblings().isEmpty()) {
+            // Only convert if the root component is a single comp with legacy in it, don't convert already normal components
+            component = org.bukkit.craftbukkit.util.CraftChatMessage.fromString(component.getContents())[0];
+        }
+        return StringTag.create(org.bukkit.craftbukkit.util.CraftChatMessage.toJSON(component));
+    }
     // Paper end
 
     public ItemStack(ItemLike item) {
@@ -181,6 +220,7 @@ public final class ItemStack {
             // CraftBukkit start - make defensive copy as this data may be coming from the save thread
             this.tag = (CompoundTag) nbttagcompound.getCompound("tag").copy();
             processEnchantOrder(this.tag); // Paper
+            processText(); // Paper
             this.getItem().verifyTagAfterLoad(this.tag);
             // CraftBukkit end
         }
@@ -664,6 +704,7 @@ public final class ItemStack {
         }
     }
 
+    @Nullable public CompoundTag getSubTag(String s) { return getTagElement(s); } // Paper - OBFHELPER
     @Nullable
     public CompoundTag getTagElement(String key) {
         return this.tag != null && this.tag.contains(key, 10) ? this.tag.getCompound(key) : null;
