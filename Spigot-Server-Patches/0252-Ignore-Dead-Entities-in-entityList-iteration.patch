From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 28 Jul 2018 12:18:27 -0400
Subject: [PATCH] Ignore Dead Entities in entityList iteration

A spigot change delays removal of entities from the entity list.
This causes a change in behavior from Vanilla where getEntities type
methods will return dead entities that they shouldn't otherwise be doing.

This will ensure that dead entities are skipped from iteration since
they shouldn't of been in the list in the first place.

diff --git a/src/main/java/com/destroystokyo/paper/PaperCommand.java b/src/main/java/com/destroystokyo/paper/PaperCommand.java
index 26b8820ad0a6c612172dd75956eee7e3d7ff85b2..51b6a10724fc94e37e4cfe2ac2437cdc6952b8c4 100644
--- a/src/main/java/com/destroystokyo/paper/PaperCommand.java
+++ b/src/main/java/com/destroystokyo/paper/PaperCommand.java
@@ -185,6 +185,7 @@ public class PaperCommand extends Command {
                 Collection<Entity> entities = world.entitiesById.values();
                 entities.forEach(e -> {
                     ResourceLocation key = e.getMinecraftKey();
+                    if (e.shouldBeRemoved) return; // Paper
 
                     MutablePair<Integer, Map<ChunkPos, Integer>> info = list.computeIfAbsent(key, k -> MutablePair.of(0, Maps.newHashMap()));
                     ChunkPos chunk = new ChunkPos(e.xChunk, e.zChunk);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index e038dc8b74cb441435c4e8257b40aafb6f96d101..7e27d6caac22d9017f4fccb2459eaa24d695fccc 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1301,6 +1301,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
                 entity.origin = entity.getBukkitEntity().getLocation();
             }
             // Paper end
+            entity.shouldBeRemoved = false; // Paper - shouldn't be removed after being re-added
             new com.destroystokyo.paper.event.entity.EntityAddToWorldEvent(entity.getBukkitEntity()).callEvent(); // Paper - fire while valid
         }
 
@@ -1313,6 +1314,7 @@ public class ServerLevel extends net.minecraft.world.level.Level implements Worl
             this.removeFromChunk(entity);
             this.entitiesById.remove(entity.getId());
             this.onEntityRemoved(entity);
+            entity.shouldBeRemoved = true; // Paper
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index d64d7f3c9f91730e5214ad40743bf7c4379315c1..d90eda18d0815e79670a1e1dec3410fc328a9de5 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -278,6 +278,7 @@ public abstract class Entity implements Nameable, CommandSource, KeyedObject { /
     protected int numCollisions = 0; // Paper
     public void inactiveTick() { }
     // Spigot end
+    public boolean shouldBeRemoved; // Paper
 
     public float getBukkitYaw() {
         return this.yRot;
diff --git a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
index efc82573cbbf607835aadec1e4e9b00f08c8745c..88537c46d5d3b59a1d1986c56e2f2f271f5bddd3 100644
--- a/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
+++ b/src/main/java/net/minecraft/world/level/chunk/LevelChunk.java
@@ -853,6 +853,7 @@ public class LevelChunk implements ChunkAccess {
 
             for (int i1 = 0; i1 < l; ++i1) {
                 Entity entity1 = (Entity) list1.get(i1);
+                if (entity1.shouldBeRemoved) continue; // Paper
 
                 if (entity1.getBoundingBox().intersects(box) && entity1 != except) {
                     if (predicate == null || predicate.test(entity1)) {
@@ -889,6 +890,7 @@ public class LevelChunk implements ChunkAccess {
 
             while (iterator.hasNext()) {
                 T entity = (T) iterator.next(); // CraftBukkit - decompile error
+                if (entity.shouldBeRemoved) continue; // Paper
 
                 if ((type == null || entity.getType() == type) && entity.getBoundingBox().intersects(box) && predicate.test(entity)) {
                     result.add(entity);
@@ -910,6 +912,7 @@ public class LevelChunk implements ChunkAccess {
 
             while (iterator.hasNext()) {
                 T t0 = (T) iterator.next(); // CraftBukkit - decompile error
+                if (t0.shouldBeRemoved) continue; // Paper
 
                 if (entityClass.isInstance(t0) && t0.getBoundingBox().intersects(box) && (predicate == null || predicate.test(t0))) { // Spigot - instance check
                     result.add(t0);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index c192c2b1a791781baaf2724e0987d59a1fa362b8..0b208795b546f2c480de753e97fd54f41b830136 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -1009,6 +1009,7 @@ public class CraftWorld implements World {
         for (Object o : world.entitiesById.values()) {
             if (o instanceof net.minecraft.world.entity.Entity) {
                 net.minecraft.world.entity.Entity mcEnt = (net.minecraft.world.entity.Entity) o;
+                if (mcEnt.shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = mcEnt.getBukkitEntity();
 
                 // Assuming that bukkitEntity isn't null
@@ -1028,6 +1029,7 @@ public class CraftWorld implements World {
         for (Object o : world.entitiesById.values()) {
             if (o instanceof net.minecraft.world.entity.Entity) {
                 net.minecraft.world.entity.Entity mcEnt = (net.minecraft.world.entity.Entity) o;
+                if (mcEnt.shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = mcEnt.getBukkitEntity();
 
                 // Assuming that bukkitEntity isn't null
@@ -1054,6 +1056,7 @@ public class CraftWorld implements World {
 
         for (Object entity: world.entitiesById.values()) {
             if (entity instanceof net.minecraft.world.entity.Entity) {
+                if (((net.minecraft.world.entity.Entity) entity).shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = ((net.minecraft.world.entity.Entity) entity).getBukkitEntity();
 
                 if (bukkitEntity == null) {
@@ -1077,6 +1080,7 @@ public class CraftWorld implements World {
 
         for (Object entity: world.entitiesById.values()) {
             if (entity instanceof net.minecraft.world.entity.Entity) {
+                if (((net.minecraft.world.entity.Entity) entity).shouldBeRemoved) continue; // Paper
                 Entity bukkitEntity = ((net.minecraft.world.entity.Entity) entity).getBukkitEntity();
 
                 if (bukkitEntity == null) {
