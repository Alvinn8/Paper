From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 29 Jun 2020 03:26:17 -0400
Subject: [PATCH] Support old UUID format for NBT

We have stored UUID in plenty of places that did not get DFU'd

So just look for old format and load it if it exists.

diff --git a/src/main/java/net/minecraft/nbt/CompoundTag.java b/src/main/java/net/minecraft/nbt/CompoundTag.java
index c103d16380ad9f22278c929a66ed605c5e48fefa..4747db65d1b8db57c09a489845d4f792f657a40f 100644
--- a/src/main/java/net/minecraft/nbt/CompoundTag.java
+++ b/src/main/java/net/minecraft/nbt/CompoundTag.java
@@ -126,6 +126,12 @@ public class CompoundTag implements Tag {
 
     public void setUUID(String prefix, UUID uuid) { putUUID(prefix, uuid); } // Paper - OBFHELPER
     public void putUUID(String key, UUID value) {
+        // Paper start - support old format
+        if (this.contains(key + "Most", 99) && this.contains(key + "Least", 99)) {
+            this.tags.remove(key + "Most");
+            this.tags.remove(key + "Least");
+        }
+        // Paper end
         this.tags.put(key, NbtUtils.createUUID(value));
     }
 
@@ -133,11 +139,21 @@ public class CompoundTag implements Tag {
     @Nullable public UUID getUUID(String prefix) { return getUUID(prefix); } // Paper - OBFHELPER
     @Nullable
     public UUID getUUID(String key) {
+        // Paper start - support old format
+        if (!contains(key, 11) && this.contains(key + "Most", 99) && this.contains(key + "Least", 99)) {
+            return new UUID(this.getLong(key + "Most"), this.getLong(key + "Least"));
+        }
+        // Paper end
         return NbtUtils.loadUUID(this.get(key));
     }
 
     public final boolean hasUUID(String s) { return this.hasUUID(s); } // Paper - OBFHELPER
     public boolean hasUUID(String key) {
+        // Paper start - support old format
+        if (this.contains(key + "Most", 99) && this.contains(key + "Least", 99)) {
+            return true;
+        }
+        // Paper end
         Tag tag = this.get(key);
         return tag != null && tag.getType() == IntArrayTag.TYPE && ((IntArrayTag)tag).getAsIntArray().length == 4;
     }
diff --git a/src/main/java/net/minecraft/nbt/NbtUtils.java b/src/main/java/net/minecraft/nbt/NbtUtils.java
index 9a89fb2677061728ed29febba9c26bdb5fb233a4..b146d9e808968f1a552fcc0f694f911a00631a28 100644
--- a/src/main/java/net/minecraft/nbt/NbtUtils.java
+++ b/src/main/java/net/minecraft/nbt/NbtUtils.java
@@ -36,6 +36,11 @@ public final class NbtUtils {
             string = tag.getString("Name");
         }
 
+        // Paper start - support string UUID's
+        if (tag.contains("Id", 8)) {
+            uuid = UUID.fromString(tag.getString("Id"));
+        }
+        // Paper end
         if (tag.hasUUID("Id")) {
             uUID = tag.getUUID("Id");
         }
