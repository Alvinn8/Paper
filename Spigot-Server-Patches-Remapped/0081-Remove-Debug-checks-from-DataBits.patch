From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 5 Apr 2016 21:38:58 -0400
Subject: [PATCH] Remove Debug checks from DataBits

These are super hot and causing noticeable hits

Before: http://i.imgur.com/nQsMzAE.png
After: http://i.imgur.com/nJ46crB.png

diff --git a/src/main/java/net/minecraft/util/BitStorage.java b/src/main/java/net/minecraft/util/BitStorage.java
index 97bde5f8402452e59b0da94edfe1b970cdb86748..473d732d8fb4484f272d3507719f565d9e57afbe 100644
--- a/src/main/java/net/minecraft/util/BitStorage.java
+++ b/src/main/java/net/minecraft/util/BitStorage.java
@@ -54,8 +54,8 @@ public class BitStorage {
     }
 
     public int getAndSet(int index, int value) {
-        Validate.inclusiveBetween(0L, (long) (this.size - 1), (long) index);
-        Validate.inclusiveBetween(0L, this.mask, (long) value);
+        //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
+        //Validate.inclusiveBetween(0L, this.d, (long) j); // Paper
         int k = this.cellIndex(index);
         long l = this.data[k];
         int i1 = (index - k * this.valuesPerLong) * this.bits;
@@ -66,8 +66,8 @@ public class BitStorage {
     }
 
     public void set(int index, int value) {
-        Validate.inclusiveBetween(0L, (long) (this.size - 1), (long) index);
-        Validate.inclusiveBetween(0L, this.mask, (long) value);
+        //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
+        //Validate.inclusiveBetween(0L, this.d, (long) j); // Paper
         int k = this.cellIndex(index);
         long l = this.data[k];
         int i1 = (index - k * this.valuesPerLong) * this.bits;
@@ -76,7 +76,7 @@ public class BitStorage {
     }
 
     public int get(int index) {
-        Validate.inclusiveBetween(0L, (long) (this.size - 1), (long) index);
+        //Validate.inclusiveBetween(0L, (long) (this.e - 1), (long) i); // Paper
         int j = this.cellIndex(index);
         long k = this.data[j];
         int l = (index - j * this.valuesPerLong) * this.bits;
