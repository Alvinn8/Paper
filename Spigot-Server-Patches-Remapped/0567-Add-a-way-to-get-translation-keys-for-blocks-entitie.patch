From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MeFisto94 <MeFisto94@users.noreply.github.com>
Date: Tue, 11 Aug 2020 19:16:09 +0200
Subject: [PATCH] Add a way to get translation keys for blocks, entities and
 materials


diff --git a/src/main/java/net/minecraft/world/entity/EntityType.java b/src/main/java/net/minecraft/world/entity/EntityType.java
index 4624c21faac6f9a63f1709192e357f646ee6714d..1814043451d2357329f93c4a285b0b2cfc0103d0 100644
--- a/src/main/java/net/minecraft/world/entity/EntityType.java
+++ b/src/main/java/net/minecraft/world/entity/EntityType.java
@@ -277,6 +277,7 @@ public class EntityType<T extends Entity> {
         return Registry.ENTITY_TYPE.getKey(type);
     }
 
+    public static Optional<EntityType<?>> getByName(String name) { return byString(name); } // Paper - OBFHELPER
     public static Optional<EntityType<?>> byString(String id) {
         return Registry.ENTITY_TYPE.getOptional(ResourceLocation.tryParse(id));
     }
@@ -416,6 +417,7 @@ public class EntityType<T extends Entity> {
         return this.category;
     }
 
+    public String getDescriptionId() { return getDescriptionId(); } // Paper - OBFHELPER
     public String getDescriptionId() {
         if (this.descriptionId == null) {
             this.descriptionId = Util.makeDescriptionId("entity", Registry.ENTITY_TYPE.getKey(this));
diff --git a/src/main/java/net/minecraft/world/item/Item.java b/src/main/java/net/minecraft/world/item/Item.java
index 259c137d66da8405c66ed6c221d9b00b77cd5794..13198cb207c4e5a7d898017f4857a365a974de7e 100644
--- a/src/main/java/net/minecraft/world/item/Item.java
+++ b/src/main/java/net/minecraft/world/item/Item.java
@@ -56,7 +56,7 @@ public class Item implements ItemLike {
     private final FoodProperties foodProperties;
 
     public static int getId(Item item) {
-        return item == null ? 0 : Registry.ITEM.getId((Object) item);
+        return item == null ? 0 : Registry.ITEM.getId(item);  // Paper - Fix Decompiler Issue
     }
 
     public static Item byId(int id) {
@@ -152,6 +152,7 @@ public class Item implements ItemLike {
         return Registry.ITEM.getKey(this).getPath();
     }
 
+    public String getOrCreateDescriptionId() { return getOrCreateDescriptionId(); } // Paper - OBFHELPER
     protected String getOrCreateDescriptionId() {
         if (this.descriptionId == null) {
             this.descriptionId = Util.makeDescriptionId("item", Registry.ITEM.getKey(this));
diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index e5e7d0467ac17fa0e3166017b06ff1ef8db02a89..95c03775ac6ebc8e7553e1d4a935cf59bde9cdc0 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -319,6 +319,7 @@ public class Block extends BlockBehaviour implements ItemLike {
         return !this.material.isSolid() && !this.material.isLiquid();
     }
 
+    public String getDescriptionId() { return getDescriptionId(); } // Paper - OBFHELPER
     public String getDescriptionId() {
         if (this.descriptionId == null) {
             this.descriptionId = Util.makeDescriptionId("block", Registry.BLOCK.getKey(this));
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index beff09fbfd8cd97613f783ed17dfb7573dbf1692..20de08eadec554657dfbc5cd6c73b1d96e0364fd 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -749,5 +749,10 @@ public class CraftBlock implements Block {
     public com.destroystokyo.paper.block.BlockSoundGroup getSoundGroup() {
         return new com.destroystokyo.paper.block.CraftBlockSoundGroup(getNMSBlock().defaultBlockState().getSoundType());
     }
+
+    @Override
+    public String getTranslationKey() {
+        return org.bukkit.Bukkit.getUnsafe().getTranslationKey(this);
+    }
     // Paper end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index d4f2aea3e4d1e9a295ce494e709dbbb0b6d90efd..028319fc894b0d759d4311bfa688e149b0580779 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -43,6 +43,7 @@ import org.bukkit.Registry;
 import org.bukkit.UnsafeValues;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
+import org.bukkit.craftbukkit.block.CraftBlock;
 import org.bukkit.craftbukkit.block.data.CraftBlockData;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.craftbukkit.legacy.CraftLegacy;
@@ -391,6 +392,22 @@ public final class CraftMagicNumbers implements UnsafeValues {
             throw new RuntimeException();
         }
     }
+
+    @Override
+    public String getTranslationKey(Material mat) {
+        return getItem(mat).getOrCreateDescriptionId();
+    }
+
+    @Override
+    public String getTranslationKey(org.bukkit.block.Block block) {
+        return ((org.bukkit.craftbukkit.block.CraftBlock)block).getNMS().getBlock().getDescriptionId();
+    }
+
+    @Override
+    public String getTranslationKey(org.bukkit.entity.EntityType type) {
+        return net.minecraft.world.entity.EntityType.getByName(type.getName()).map(net.minecraft.world.entity.EntityType::getDescriptionId).orElse(null);
+    }
+
     // Paper end
 
     /**
