From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 22 Mar 2016 00:33:47 -0400
Subject: [PATCH] Use a Shared Random for Entities

Reduces memory usage and provides ensures more randomness, Especially since a lot of garbage entity objects get created.

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index cf937d537552c30dc5effaf7f51a2dac11af589c..9cd360527840e0360690b3105175415ff2531415 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -145,6 +145,21 @@ public abstract class Entity implements Nameable, CommandSource, KeyedObject { /
         return tag.contains("Bukkit.updateLevel") && tag.getInt("Bukkit.updateLevel") >= level;
     }
 
+    // Paper start
+    public static Random SHARED_RANDOM = new Random() {
+        private boolean locked = false;
+        @Override
+        public synchronized void setSeed(long seed) {
+            if (locked) {
+                LogManager.getLogger().error("Ignoring setSeed on Entity.SHARED_RANDOM", new Throwable());
+            } else {
+                super.setSeed(seed);
+                locked = true;
+            }
+        }
+    };
+    // Paper end
+
     private CraftEntity bukkitEntity;
 
     public CraftEntity getBukkitEntity() {
@@ -274,7 +289,7 @@ public abstract class Entity implements Nameable, CommandSource, KeyedObject { /
         this.stuckSpeedMultiplier = Vec3.ZERO;
         this.nextStep = 1.0F;
         this.nextFlap = 1.0F;
-        this.random = new Random();
+        this.random = SHARED_RANDOM; // Paper
         this.remainingFireTicks = -this.getFireImmuneTicks();
         this.fluidHeight = new Object2DoubleArrayMap(2);
         this.firstTick = true;
