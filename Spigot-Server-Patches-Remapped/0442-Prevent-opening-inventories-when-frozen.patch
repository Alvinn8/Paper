From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Mon, 13 Apr 2020 07:31:44 +0100
Subject: [PATCH] Prevent opening inventories when frozen


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 0d8bbeb44a54f4ecf6d79d29fa8e047cb8d4c64d..055e6f38cf0114493a1c904e1dcac1f0e7d47120 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -553,7 +553,7 @@ public class ServerPlayer extends Player implements ContainerListener {
             containerUpdateDelay = level.paperConfig.containerUpdateTickRate;
         }
         // Paper end
-        if (!this.level.isClientSide && !this.containerMenu.stillValid(this)) {
+        if (!this.level.isClientSide && this.containerMenu != this.inventoryMenu && (isImmobile() || !this.containerMenu.stillValid(this))) { // Paper - auto close while frozen
             this.closeContainer(org.bukkit.event.inventory.InventoryCloseEvent.Reason.CANT_USE); // Paper
             this.containerMenu = this.inventoryMenu;
         }
@@ -1381,7 +1381,7 @@ public class ServerPlayer extends Player implements ContainerListener {
             } else {
                 // CraftBukkit start
                 this.containerMenu = container;
-                this.connection.send(new ClientboundOpenScreenPacket(container.containerId, container.getType(), container.getTitle()));
+                if (!isImmobile()) this.connection.send(new ClientboundOpenScreenPacket(container.containerId, container.getType(), container.getTitle())); // Paper
                 // CraftBukkit end
                 container.addSlotListener(this);
                 return OptionalInt.of(this.containerCounter);
@@ -2177,7 +2177,7 @@ public class ServerPlayer extends Player implements ContainerListener {
     }
 
     @Override
-    protected boolean isImmobile() {
+    public boolean isImmobile() { // Paper - protected > public
         return super.isImmobile() || (this.connection != null && this.connection.isDisconnected()); // Paper
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
index d3938c7651bcae13717c84c08f2f035150630c1e..59957465dc633093470927af2dc214a5465a558b 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -317,7 +317,7 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
 
         String title = container.getBukkitView().getTitle();
 
-        player.connection.send(new ClientboundOpenScreenPacket(container.containerId, windowType, CraftChatMessage.fromString(title)[0]));
+        if (!player.isImmobile()) player.connection.send(new ClientboundOpenScreenPacket(container.containerId, windowType, CraftChatMessage.fromString(title)[0])); // Paper
         getHandle().containerMenu = container;
         getHandle().containerMenu.addSlotListener(player);
     }
@@ -387,7 +387,7 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
         // Now open the window
         MenuType<?> windowType = CraftContainer.getNotchInventoryType(inventory.getTopInventory());
         String title = inventory.getTitle();
-        player.connection.send(new ClientboundOpenScreenPacket(container.containerId, windowType, CraftChatMessage.fromString(title)[0]));
+        if (!player.isImmobile()) player.connection.send(new ClientboundOpenScreenPacket(container.containerId, windowType, CraftChatMessage.fromString(title)[0])); // Paper
         player.containerMenu = container;
         player.containerMenu.addSlotListener(player);
     }
