From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Wed, 6 May 2020 05:00:57 -0400
Subject: [PATCH] Handle Oversized Tile Entities in chunks

Splits out Extra Packets if too many TE's are encountered to prevent
creating too large of a packet to sed.

Co authored by Spottedleaf

diff --git a/src/main/java/net/minecraft/network/Connection.java b/src/main/java/net/minecraft/network/Connection.java
index 60a5820373ec4899fc73b722c4d500dd5c43310b..65ef98f2be47cc9a363b672e7c3ddcbc79978b98 100644
--- a/src/main/java/net/minecraft/network/Connection.java
+++ b/src/main/java/net/minecraft/network/Connection.java
@@ -229,7 +229,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             return; // Do nothing
         }
         packet.onPacketDispatch(getPlayer());
-        if (connected && (net.minecraft.network.Connection.InnerUtil.canSendImmediate(this, packet) || (
+        if (connected && (InnerUtil.canSendImmediate(this, packet) || (
             MCUtil.isMainThread() && packet.isReady() && this.queue.isEmpty() &&
             (packet.getExtraPackets() == null || packet.getExtraPackets().isEmpty())
         ))) {
@@ -237,7 +237,7 @@ public class Connection extends SimpleChannelInboundHandler<Packet<?>> {
             return;
         }
         // write the packets to the queue, then flush - antixray hooks there already
-        java.util.List<Packet> extraPackets = net.minecraft.network.Connection.InnerUtil.buildExtraPackets(packet);
+        java.util.List<Packet> extraPackets = InnerUtil.buildExtraPackets(packet);
         boolean hasExtraPackets = extraPackets != null && !extraPackets.isEmpty();
         if (!hasExtraPackets) {
             this.queue.add(new Connection.PacketHolder(packet, callback));
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacket.java
index 7ebfabf085bf8bd7ba28e390990ff08a49859e1b..5f895f11771f81545329dd311bd18a77adf023e1 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacket.java
@@ -34,7 +34,15 @@ public class ClientboundLevelChunkPacket implements Packet<ClientGamePacketListe
     private boolean fullChunk;
 
     public ClientboundLevelChunkPacket() {}
+    // Paper start
+    private final java.util.List<Packet> extraPackets = new java.util.ArrayList<>();
+    private static final int TE_LIMIT = Integer.getInteger("Paper.excessiveTELimit", 750);
 
+    @Override
+    public java.util.List<Packet> getExtraPackets() {
+        return extraPackets;
+    }
+    // Paper end
     public ClientboundLevelChunkPacket(LevelChunk chunk, int includedSectionsMask) {
         ChunkPos chunkcoordintpair = chunk.getPos();
 
@@ -61,6 +69,7 @@ public class ClientboundLevelChunkPacket implements Packet<ClientGamePacketListe
         this.availableSections = this.extractChunkData(new FriendlyByteBuf(this.getWriteBuffer()), chunk, includedSectionsMask);
         this.blockEntitiesTags = Lists.newArrayList();
         iterator = chunk.getBlockEntities().entrySet().iterator();
+        int totalTileEntities = 0; // Paper
 
         while (iterator.hasNext()) {
             entry = (Entry) iterator.next();
@@ -69,6 +78,15 @@ public class ClientboundLevelChunkPacket implements Packet<ClientGamePacketListe
             int j = blockposition.getY() >> 4;
 
             if (this.isFullChunk() || (includedSectionsMask & 1 << j) != 0) {
+                // Paper start - improve oversized chunk data packet handling
+                if (++totalTileEntities > TE_LIMIT) {
+                    ClientboundBlockEntityDataPacket updatePacket = tileentity.getUpdatePacket();
+                    if (updatePacket != null) {
+                        this.extraPackets.add(updatePacket);
+                        continue;
+                    }
+                }
+                // Paper end
                 CompoundTag nbttagcompound = tileentity.getUpdateTag();
                 if (tileentity instanceof SkullBlockEntity) { SkullBlockEntity.sanitizeTileEntityUUID(nbttagcompound); } // Paper
 
